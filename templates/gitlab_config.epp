<% | String $external_domain,
     Boolean $use_https,
     Optional[String] $gitlab_ssh_host = undef,
     Boolean $use_ldap = false,
     Optional[String] $ldap_server = undef,
     Optional[Integer] $ldap_port = undef,
     Optional[String] $ldap_uid_field = undef,
     Optional[String] $ldap_method = undef,
     Optional[String] $ldap_bind_dn = undef,
     Optional[String] $ldap_bind_password = undef,
     Optional[Boolean] $ldap_active_directory = undef,
     Optional[String] $ldap_base_dn = undef,
     Optional[String] $ldap_filter = undef,
     Optional[String] $registry_external_url = undef,
| -%>
# Managed by Puppet, do not edit!
nginx['listen_addresses'] = ['*', '[::]']
<%- if $use_https { -%>
external_url 'https://<%= $external_domain %>'
nginx['ssl_certificate'] = "/etc/letsencrypt/live/<%= $external_domain %>/fullchain.pem"
nginx['ssl_certificate_key'] = "/etc/letsencrypt/live/<%= $external_domain %>/privkey.pem"
nginx['redirect_http_to_https'] = true
<%- } else { -%>
external_url 'http://<%= $external_domain %>'
<%- } -%>

registry_external_url '<%= $registry_external_url %>'

nginx['custom_gitlab_server_config'] = "location ^~ /.well-known { root /opt/gitlab/embedded/html/letsencrypt; }"

<%- if $gitlab_ssh_host { -%>
gitlab_rails['gitlab_ssh_host'] = '<%= $gitlab_ssh_host %>'
<%- } -%>
<%- if $use_ldap { -%>
# LDAP configuration
gitlab_rails['ldap_enabled'] = true
gitlab_rails['ldap_servers'] = YAML.load <<-EOS # remember to close this block with 'EOS' below
main: # 'main' is the GitLab 'provider ID' of this LDAP server
  ## label
  #
  # A human-friendly name for your LDAP server. It is OK to change the label later,
  # for instance if you find out it is too large to fit on the web page.
  #
  # Example: 'Paris' or 'Acme, Ltd.'
  label: 'LDAP'

  host: '<%= $ldap_server %>'
  port: <%= $ldap_port %>
  uid: '<%= $ldap_uid_field %>'
  method: '<%= $ldap_method %>' # "tls" or "ssl" or "plain"
  bind_dn: '<%= $ldap_bind_dn %>'
  password: '<%= $ldap_bind_password %>'

  # This setting specifies if LDAP server is Active Directory LDAP server.
  # For non AD servers it skips the AD specific queries.
  # If your LDAP server is not AD, set this to false.
  active_directory: <%= $ldap_active_directory %>

  # If allow_username_or_email_login is enabled, GitLab will ignore everything
  # after the first '@' in the LDAP username submitted by the user on login.
  #
  # Example:
  # - the user enters 'jane.doe@example.com' and 'p@ssw0rd' as LDAP credentials;
  # - GitLab queries the LDAP server with 'jane.doe' and 'p@ssw0rd'.
  #
  # If you are using "uid: 'userPrincipalName'" on ActiveDirectory you need to
  # disable this setting, because the userPrincipalName contains an '@'.
  allow_username_or_email_login: true

  # Base where we can search for users
  #
  #   Ex. ou=People,dc=gitlab,dc=example
  #
  base: '<%= $ldap_base_dn %>'

  # Filter LDAP users
  #
  #   Format: RFC 4515 http://tools.ietf.org/search/rfc4515
  #   Ex. (employeeType=developer)
  #
  #   Note: GitLab does not support omniauth-ldap's custom filter syntax.
  #
  user_filter: '<%= $ldap_filter %>'
EOS

<%- } -%>
